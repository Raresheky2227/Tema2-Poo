Starting audit...
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:6:20: Name 'StartsWith' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:18:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:22:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setSubscribedGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setSubscribedGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:22:36: Parameter subscribedGenre should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:26:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:30:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setAddedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setAddedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:30:31: Parameter addedMovie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:34:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:38:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setDeletedMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setDeletedMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:38:33: Parameter deletedMovie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:42:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:46:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:46:25: Parameter type should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:46:38: '{' at column 38 should have line break after. [LeftCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:48:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:52:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:52:25: Parameter page should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:56:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:60:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:60:28: Parameter feature should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:64:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:68:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:68:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:72:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:76:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:76:28: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:80:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:84:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:84:31: Parameter startsWith should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:88:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:92:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:92:26: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:96:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:100:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:100:26: Parameter count should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:104:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:108:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:108:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:112:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:116:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilter' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:116:27: Parameter filter should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:120:5: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:122:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:123:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:124:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:125:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:126:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:127:54: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:128:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:129:36: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:130:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Action.java:131:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:4:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:5:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:5:27: Name 'Login' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:5:33: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:5:34: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:5:53: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:7: Line is longer than 100 characters (found 167). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:16:27: Name 'Register' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:16:36: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:16:37: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:16:56: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:35:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:35:24: Name 'Logout' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:35:31: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:35:32: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:41:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:41:24: Name 'ListMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:41:35: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:41:36: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:42:16: Name 'Ban' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:44:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:49:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:49:24: Name 'SearchMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:49:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:49:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:49:57: Parameter toSearch should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:54:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:54:29: Parameter A should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:54:38: Name 'A' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:54:41: Parameter B should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:54:50: Name 'B' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:60:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:60:29: Parameter A should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:60:38: Name 'A' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:60:41: Parameter B should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:60:50: Name 'B' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:66:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:66:29: Parameter A should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:66:38: Name 'A' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:66:41: Parameter B should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:66:50: Name 'B' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:67:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:69:18: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:76:28: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:76:29: Parameter a should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:76:41: Parameter b should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:86:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:86:24: Name 'FilterMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:86:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:86:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:86:57: Parameter filters should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:91:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:93:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:97:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:99:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:106:59: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:130:24: Name 'SeeDetails' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:130:35: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:130:36: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:130:55: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:134:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:134:27: Name 'BuyTokens' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:134:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:134:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:134:57: Parameter tokensAdded should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:135: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:137:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:139: Line is longer than 100 characters (found 173). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:140: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:142: Line is longer than 100 characters (found 122). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:143: Line is longer than 100 characters (found 117). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:151:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:151:27: Name 'BuyPremiumAccount' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:151:45: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:151:46: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:152:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:152:58: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:154:95: '10' is a magic number. [MagicNumber]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:157: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:159: Line is longer than 100 characters (found 121). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:166:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:166:27: Name 'PurchaseMovie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:166:41: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:166:42: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:166:61: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:167:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:174:15: Name 'Movie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:177: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:181:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:183: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:187: Line is longer than 100 characters (found 250). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:188: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:192: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:193: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:200:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:200:27: Name 'WatchMovie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:200:38: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:200:39: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:200:58: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:201:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:217:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:217:27: Name 'LikeMovie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:217:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:217:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:217:57: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:218:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:236:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:236:27: Name 'RateMovie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:236:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:236:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:236:57: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:237:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:237:20: '5' is a magic number. [MagicNumber]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:238:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:239:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:241:18: Name 'RatedMovie' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:244: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:245:25: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:267:13: Name 'num_Ratings' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:277:37: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:277:41: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:277:41: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:281:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:281:27: Name 'Subscribe' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:281:37: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:281:38: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:281:57: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:286:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:295:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:295:24: Name 'Recommend' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:295:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:295:35: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:299:20: Variable 'name' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:300:17: Name 'num_likes' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:300:17: Variable 'num_likes' must be private and have accessor methods. [VisibilityModifier]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:306:33: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:310:24: Name 'getNum_likes' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:314:25: Name 'setNum_likes' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:314:38: Parameter num_likes should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:314:42: Name 'num_likes' must match pattern '^[a-z][a-zA-Z0-9]*$'. [ParameterName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:318:13: Redundant 'public' modifier. [RedundantModifier]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:318:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:318:25: Parameter string should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:318:40: Parameter no should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:349:17: Name 'max_likes' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:350:31: Name 'Genres' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:356:23: Name 'MAX' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalFinalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:365:32: Name 'to_delete' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:378:33: Name 'Recom' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:379:32: Name 'to_delete1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:397:23: Name 'MAX1' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalFinalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:412:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:412:27: Name 'Add' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:412:31: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:412:32: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:412:51: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:416:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:424:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:424:24: Name 'Update' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:424:31: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:424:32: Parameter platform should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:424:51: Parameter movieRun should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\ActionHandler.java:432:21: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:10:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:14:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:14:26: Parameter genre should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:18:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:22:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:22:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:26:5: Class 'Contains' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contains' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:28:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:29:35: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Contains.java:30:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:1:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:10:25: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:10:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:10:26: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:12:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:16:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:16:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:20:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:24:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:24:29: Parameter password should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:28:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:32:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:32:32: Parameter accountType should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:36:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:40:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:40:28: Parameter country should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:44:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:48:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:48:28: Parameter balance should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:52:5: Class 'Credentials' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credentials' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:54:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:55:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:56:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:57:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:58:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Credentials.java:59:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:13:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:17:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setNotifications' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setNotifications' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:17:34: Parameter notifications should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:21:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:25:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:25:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:29:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:33:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setTokensCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setTokensCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:33:32: Parameter tokensCount should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:37:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:41:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:41:41: Parameter numFreePremiumMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:45:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:49:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:49:36: Parameter purchasedMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:53:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:57:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:57:34: Parameter watchedMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:61:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:65:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:65:32: Parameter likedMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:69:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:73:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:73:32: Parameter ratedMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:77:24: Parameter user should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:79:37: '15' is a magic number. [MagicNumber]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:92:24: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:129:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:131:31: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:132:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:133:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:134:66: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:135:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:136:52: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:137:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:138:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:142:5: Class 'CurrentUser' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CurrentUser' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:142:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\CurrentUser.java:142:27: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:8:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:12:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:12:25: Parameter sort should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:16:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:20:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:20:29: Parameter contains should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:24:5: Class 'Filters' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filters' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:26:27: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:27:32: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Filters.java:28:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:14:5: ';' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:16:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:20:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:20:26: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:24:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:28:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:28:27: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:32:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Input.java:36:28: Parameter actions should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:6:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:7:5: Method length is 306 lines (max allowed is 150). [MethodLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:7:29: Parameter args should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:14:13: Name 'to_add' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:16:13: Name 'has_come_from_upgrades_movies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:17:13: Name 'has_come_from_upgrades_details' must match pattern '^[a-z][a-zA-Z0-9]*$'. [LocalVariableName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:40: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:40:23: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:41:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:47:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:50:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:52:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:54:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:58:13: '}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:59: Line is longer than 100 characters (found 180). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:59:138: '||' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:65: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:65:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:67:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:70: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:76:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:77: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:82: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:85:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:86: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:91: Line is longer than 100 characters (found 188). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:93:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:94: Line is longer than 100 characters (found 192). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:95:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:97:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:101:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:107: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:107:48: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:111: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:113:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:114: Line is longer than 100 characters (found 151). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:116:25: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:118:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:120:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:122:21: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:129:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:130: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:130:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:130:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:136: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:138:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:139: Line is longer than 100 characters (found 153). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:148: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:151:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:152: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:154:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:155: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:159:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:160: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:160:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:160:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:164: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:167:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:168: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:170:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:171: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:176: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:176:52: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:181: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:183:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:184: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:188: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:188:48: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:192: Line is longer than 100 characters (found 143). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:194:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:195: Line is longer than 100 characters (found 147). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:200: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:200:48: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:204: Line is longer than 100 characters (found 106). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:206:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:207: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:215: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:217:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:218: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:226: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:228:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:229: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:233:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:234: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:234:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:234:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:240:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:241: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:246:25: '}' at column 25 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:247:25: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:249:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:250: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:250:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:250:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:257:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:258: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:262:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:263: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:263:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:263:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:269:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:270: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:273:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:274: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:274:21: 'else' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:274:53: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:278: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:280:17: '}' at column 17 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:281: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:286:21: '}' at column 21 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:304:95: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Main.java:306:44: ',' is preceded with whitespace. [NoWhitespaceBefore]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:1:8: Unused import - javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec. [UnusedImports]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:12:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:16:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:16:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:20:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:24:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:24:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:28:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:32:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:32:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:36:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:40:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:40:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:44:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:48:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:48:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:52:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:56:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:56:36: Parameter contriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:63:5: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:65:25: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:66:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:67:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:68:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:69:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:70:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Movie.java:71:55: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:14:21: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:14:22: Parameter movie should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:15:18: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:26:21: Parameter movieRun should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:32:13: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:56:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:60:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:60:25: Parameter name should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:64:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:68:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:68:25: Parameter year should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:72:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:76:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:76:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:80:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:84:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:84:27: Parameter genres should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:88:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:92:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:92:27: Parameter actors should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:96:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:100:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:100:36: Parameter countriesBanned should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:104:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:108:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:108:29: Parameter numLikes should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:112:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:116:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:116:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:120:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:124:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:124:31: Parameter numRatings should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:131:5: Class 'MovieRun' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MovieRun' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:133:28: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:134:40: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:135:34: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:136:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:137:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:138:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:139:56: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:140:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:141:38: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\MovieRun.java:142:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:5:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:9:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:9:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:13:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'getMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'getMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:17:5: Class 'Notification' looks like designed for extension (can be subclassed), but the method 'setMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Notification' final or making the method 'setMessage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:17:28: Parameter message should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:21:25: Parameter notification should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:22:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Notification.java:24:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:2:8: Unused import - java.util.Collections. [UnusedImports]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:9:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:13:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'setError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'setError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:13:26: Parameter error should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:17:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getCurrentMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getCurrentMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:21:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'setCurrentMoviesList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'setCurrentMoviesList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:21:38: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:25:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'getCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'getCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:29:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'setCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'setCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:29:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:36:19: Parameter error should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:36:33: Parameter currentMoviesList should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:36:72: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:38:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:49:9: '}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:55:5: Class 'Output' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Output' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:57:26: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:58:42: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:59:60: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Output.java:60:48: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:13:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getUserRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getUserRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:17:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'setUserRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'setUserRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:17:32: Parameter userRatings should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:21:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getUserSubs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getUserSubs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:25:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'setUserSubs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'setUserSubs' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:25:29: Parameter userSubs should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:29:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getState' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:33:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'setState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'setState' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:33:26: Parameter state should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:37:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'SetPlatformMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'SetPlatformMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:37:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:37:17: Name 'SetPlatformMovies' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:37:35: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:37:36: Parameter movies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:44:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'SetRegisteredUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'SetRegisteredUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:44:17: Name 'SetRegisteredUsers' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:44:36: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:44:37: Parameter users should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:46:25: 'currentUser' hides a field. [HiddenField]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:51:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getPlatformMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getPlatformMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:55:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getRegisteredUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getRegisteredUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:59:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:63:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'setCurrentUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'setCurrentUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:63:32: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:67:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'getListedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'getListedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:71:5: Class 'Platform' looks like designed for extension (can be subclassed), but the method 'setListedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Platform' final or making the method 'setListedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Platform.java:71:33: Parameter listedMovies should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:5:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:9:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:9:25: Parameter rate should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:13:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'getMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'getMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:17:5: Class 'Ratings' looks like designed for extension (can be subclassed), but the method 'setMovieName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ratings' final or making the method 'setMovieName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Ratings.java:17:30: Parameter movieName should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:8:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:12:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:12:27: Parameter rating should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:16:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:20:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:20:29: Parameter duration should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:24:5: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:26:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:27:44: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Sort.java:28:50: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Test.java:9:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Test.java:158: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Test.java:206:65: Parameter testFileName should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\Test.java:222: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:4:18: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:4:18: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:4:19: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:6:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:10:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:10:32: Parameter credentials should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:14:5: Class 'User' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:16:24: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\User.java:17:46: '+' should be on a new line. [OperatorWrap]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:7:5: Class 'UserRatings' looks like designed for extension (can be subclassed), but the method 'getUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserRatings' final or making the method 'getUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:11:5: Class 'UserRatings' looks like designed for extension (can be subclassed), but the method 'setUser' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserRatings' final or making the method 'setUser' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:11:25: Parameter user should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:15:5: Class 'UserRatings' looks like designed for extension (can be subclassed), but the method 'getRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserRatings' final or making the method 'getRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:19:5: Class 'UserRatings' looks like designed for extension (can be subclassed), but the method 'setRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserRatings' final or making the method 'setRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:19:28: Parameter ratings should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserRatings.java:23:24: Parameter currentUser should be final. [FinalParameters]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserSubs.java:5:31: Name 'SubGenres' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MemberName]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserSubs.java:7:5: Class 'UserSubs' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserSubs' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserSubs.java:11:5: Class 'UserSubs' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserSubs' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserSubs.java:15:5: Class 'UserSubs' looks like designed for extension (can be subclassed), but the method 'getSubGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserSubs' final or making the method 'getSubGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] C:\Users\marel\IdeaProjects\oop-asignments-master (2)\oop-asignments-master\proiect2\.\src\UserSubs.java:19:5: Class 'UserSubs' looks like designed for extension (can be subclassed), but the method 'setSubGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UserSubs' final or making the method 'setSubGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
Audit done.
Checkstyle ends with 594 errors.
